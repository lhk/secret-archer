// Generated by CoffeeScript 1.6.1
(function() {
  var Network,
    _this = this;

  $(window).load(function() {
    var net;
    return net = new Network();
  });

  Network = (function() {

    Network.prototype.gameObjects = [];

    function Network() {
      var canvas, socket,
        _this = this;
      this.spawn = function(data) {
        return Network.prototype.spawn.apply(_this, arguments);
      };
      canvas = document.getElementById("Canvas");
      alert(canvas);
      canvas.width = 1000;
      canvas.height = 1000;
      this.stage = new createjs.Stage(canvas);
      alert(this.stage);
      this.testshape = new createjs.Shape();
      this.testshape.graphics.beginFill("#951");
      this.testshape.graphics.drawRect(50, 50, 50, 50);
      this.stage.addChild(this.testshape);
      this.stage.update();
      createjs.Ticker.setFPS(20);
      createjs.Ticker.addEventListener("tick", function(ev) {
        return _this.stage.update();
      });
      socket = io.connect("localhost");
      socket.on("NEWS", function(data) {
        return alert(data.news);
      });
      socket.on("RPCSPAWN", function(data) {
        alert("RPCSPAWN");
        return _this.spawn(data);
      });
      socket.on("RPCMOVE", function(data) {
        var id, object, tag, x, y, _i, _len, _ref, _results;
        alert("RPCMOVE");
        id = data.id;
        tag = data.tag;
        x = data.x;
        y = data.y;
        _ref = _this.gameObjects;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          object = _ref[_i];
          if (object.id === id && object.tag === tag) {
            object.x = x;
            object.y = y;
            object.shape.x = x;
            _results.push(object.shape.y = y);
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      });
      window.onmousedown = function(ev) {
        var mx, my;
        mx = _this.stage.mouseX;
        my = _this.stage.mouseY;
        return socket.emit("RPCSPAWNREQUEST", {
          x: mx,
          y: my,
          tag: 0
        });
      };
    }

    Network.prototype.spawn = function(data) {
      var shape, x, y;
      x = data.x;
      y = data.y;
      shape = new createjs.Shape();
      shape.graphics.beginFill("#555");
      shape.graphics.drawRect(-25, -25, 50, 50);
      this.stage.addChild(shape);
      this.stage.update();
      this.gameObjects.push({
        shape: shape,
        x: x,
        y: y,
        tag: data.tag,
        id: data.id
      });
      shape.x = x;
      shape.y = y;
      return alert("" + data.id + "," + data.tag);
    };

    return Network;

  })();

}).call(this);
